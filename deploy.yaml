apiVersion: apps/v1
kind: Deployment
metadata:
  name: cutter-status-dashboard
  namespace: default
  labels:
    app.kubernetes.io/instance: cutter-status-dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cutter-status-dashboard
  template:
    metadata:
      labels:
        app: cutter-status-dashboard
    spec:
      imagePullSecrets:
        - name: cutter-dev-gcr-regcred
      volumes:
        - name: service-account
          secret:
            secretName: "cutter-dev-idp-key"
        - name: cutter-dev-sql-proxy-sa
          secret:
            secretName: cutter-dev-sql-proxy-sa
      terminationGracePeriodSeconds: 60  
      containers:
      - name: cutter-status-dashboard
        image: "gcr.io/$PROJECT_ID/cutter-status-dashboard:$TAG"
        args:
            - --cooldown=1800
            - --log=error-log-sink-$ENV
        imagePullPolicy: Always
        volumeMounts:
          - name: service-account
            mountPath: /keys/
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
            - name: http
              containerPort: 8080
              protocol: TCP
        livenessProbe:
            httpGet:
              scheme: HTTP
              path: /healthcheck
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /healthcheck
            port: http
          initialDelaySeconds: 15
          periodSeconds: 10
        env: 
          - name: GOOGLE_PROJECT
            value: $PROJECT_ID
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /keys/cutter-214115-5bfe7b99a41d.json
          - name: PORT
            value: "8080"
          - name: PLATFORM_ENDPOINT
            value: "https://cutter-dev-platform-api-service"
          - name: FULFILLMENT_ENDPOINT
            value: "https://cutter-dev-fulfillment-service-service"
          - name: CRM_ENDPOINT
            value: "https://cutter-dev-crm-service-service"
          - name: STUDY_ENDPOINT
            value: "https://cutter-dev-study-service-service"
          - name: REDIS_URL
            value: redis:6379
--- 
apiVersion: v1
kind: Service
metadata:
  name: cutter-status-dashboard
  labels:
    app: cutter-status-dashboard
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
spec:
  type: NodePort
  selector:
    app: cutter-status-dashboard
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
