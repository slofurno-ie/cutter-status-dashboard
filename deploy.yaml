apiVersion: apps/v1
kind: Deployment
metadata:
  name: cutter-status-dashboard
  namespace: default
  labels:
    app.kubernetes.io/instance: cutter-status-dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cutter-status-dashboard
  template:
    metadata:
      labels:
        app: cutter-status-dashboard
    spec:
      imagePullSecrets:
        - name: cutter-dev-gcr-regcred
      volumes:
        - name: service-account
          secret:
            secretName: "cutter-dev-idp-key"
        - name: cutter-dev-sql-proxy-sa
          secret:
            secretName: cutter-dev-sql-proxy-sa
      terminationGracePeriodSeconds: 60
      containers:
      - name: cutter-status-dashboard
        image: "gcr.io/$PROJECT_ID/cutter-status-dashboard:$TAG"
        imagePullPolicy: Always
        volumeMounts:
          - name: service-account
            mountPath: /keys/
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
            - name: http
              containerPort: 8080
              protocol: TCP
        livenessProbe:
            httpGet:
              scheme: HTTP
              path: /healthcheck
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /healthcheck
            port: http
          initialDelaySeconds: 15
          periodSeconds: 10
        env:
          - name: GOOGLE_PROJECT
            value: $PROJECT_ID
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /keys/cutter-214115-5bfe7b99a41d.json
          - name: PORT
            value: "8080"
          - name: DB_HOSTNAME
            value: localhost
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: cutter-status-dashboard-secrets
                key: PASSWORD
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: cutter-status-dashboard-secrets
                key: USERNAME

          - name: PLATFORM_DB_HOST
            value: localhost
          - name: PLATFORM_DB_PORT
            value: "5433"
          - name: PLATFORM_DB_NAME
            value: cutter_platform
          - name: PLATFORM_DB_USERNAME
            value: cutteradmin
          - name: PLATFORM_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DB_PASSWORD
                name: cutter-dev-platform-api-secrets

          - name: DB_NAME
            value: dashboard_db
          - name: DB_PORT
            value: "5432"
          - name: MIGRATE_LEVEL
            value: "up"
          - name: MIGRATIONS_FOLDER
            value: /app/migrations
          - name: PLATFORM_ENDPOINT
            value: "https://cutter-dev-platform-api-service"
          - name: FULFILLMENT_ENDPOINT
            value: "https://cutter-dev-fulfillment-service-service"
          - name: CRM_ENDPOINT
            value: "https://cutter-dev-crm-service-service"
          - name: STUDY_ENDPOINT
            value: "https://cutter-dev-study-service-service"
          - name: CLUSTER_NAME
            value: "cutter-dev-gke-cluster"

      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.14
        resources:
          requests:
            cpu: 100m
        env:
          - name: DB_HOSTNAME
            value: localhost
          - name: ENV
            value: dev
        command:
          - /cloud_sql_proxy
          - -instances=cutter-214115:us-central1:cutter-status-dashboard-dev=tcp:5432
          - -credential_file=/secrets/cloudsql/credentials.json
        securityContext:
          runAsUser: 2 # non-root user
          allowPrivilegeEscalation: false
        volumeMounts:
          - name: cutter-dev-sql-proxy-sa
            mountPath: /secrets/cloudsql
            readOnly: true

      - name: platform-db
        image: gcr.io/cloudsql-docker/gce-proxy:1.14
        resources:
          requests:
            cpu: 100m
        command:
          - /cloud_sql_proxy
          - -instances=cutter-214115:us-central1:cutter-dev-postgres-instance-ea0e=tcp:5433
          - -credential_file=/secrets/cloudsql/credentials.json
        securityContext:
          runAsUser: 2 # non-root user
          allowPrivilegeEscalation: false
        volumeMounts:
          - name: cutter-dev-sql-proxy-sa
            mountPath: /secrets/cloudsql
            readOnly: true

--- 
apiVersion: v1
kind: Service
metadata:
  name: cutter-status-dashboard
  labels:
    app: cutter-status-dashboard
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
spec:
  type: NodePort
  selector:
    app: cutter-status-dashboard
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
